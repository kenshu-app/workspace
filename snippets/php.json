{
  "pre+dump": {
    "prefix": "dump",
    "body": ["echo '<pre>';", "var_dump(${1:});", "echo '</pre>';"],
    "description": "コード出力内var_dump"
  },
  "empty": {
    "prefix": "empty",
    "body": [
      "$${1:■} = '';",
      "if (!empty($$_POST)) {",
      "\t$■ = $$_POST['■'];",
      "}"
    ],
    "description": "空値確認フォーム値参照"
  },
  "hsc": {
    "prefix": "hsc",
    "body": "htmlspecialchars(${1:$}, ENT_QUOTES | ENT_HTML5, 'UTF-8')",
    "description": "htmlspecialchars1行出力"
  },
  "htmlspecialchars": {
    "prefix": "hfx",
    "body": [
      "/**",
      " * XSS対策のサニタイジングと参照名省略",
      " *",
      " * @param string | null $string",
      " * @return string | null",
      " *",
      " */",
      "function h(?string $$string): ?string",
      "{",
      "    if (empty($$string) return false;",
      "    return htmlspecialchars($$string, ENT_QUOTES | ENT_HTML5, 'UTF-8');",
      "}${1:}"
    ],
    "description": "h関数"
  },
  "pr": {
    "prefix": "pr",
    "body": ["echo '<pre>';", "print_r(${1:});", "echo '</pre>';"],
    "description": "シンプルデバッグ出力"
  },
  "global": {
    "prefix": "gl",
    "body": ["echo '<pre>';", "print_r($$GLOBALS);", "echo '</pre>';"],
    "description": "グローバル変数でデバッグ出力"
  },
  "flagTrue": {
    "prefix": "ist",
    "body": ["$$isValidated = true;"],
    "description": "フラグ宣言"
  },
  "flagFalse": {
    "prefix": "isf",
    "body": ["$$isValidated = false;"],
    "description": "フラグを下ろす"
  },
  "flagValid": {
    "prefix": "ift",
    "body": ["if ($$isValidated === true) {", "\t${1:}", "}"],
    "description": "フラグの判定"
  },
  "nullValid": {
    "prefix": "ifv",
    "body": [
      "if ($${1:} === '' || preg_match('/^(\\s|　)+$/u', $${1:})) {",
      "\t$${1:}Error = '${2:}';",
      "\t$$isValidated = false;",
      "}"
    ],
    "description": "空値の判定"
  },
  "pos": {
    "prefix": "pos",
    "body": "$$_POST['${1:}'];",
    "description": "POSTの参照"
  },
  "post": {
    "prefix": "post",
    "body": "$${1:■} = $$_POST['${2:■}'];",
    "description": "フォーム値個別参照"
  },
  "if": {
    "prefix": "if",
    "body": ["if ($${1:} == ${2:}) {", "  ${2:}", "}"],
    "description": "条件分岐"
  },
  "for": {
    "prefix": "for",
    "body": ["for ($$i = 0; $$i < ${1:}; $$i++) {", "  ${2:}", "}"],
    "description": "繰り返し"
  },
  "function": {
    "prefix": "fx",
    "body": ["function ${1:}(${2:})", "{", "  ${2:}", "}"],
    "description": "関数"
  },
  "require_once": {
    "prefix": "ro",
    "body": "require_once(dirname(__FILE__) . '/${1:}.php');",
    "description": "外部ファイル読み込み"
  },
  "logout": {
    "prefix": "lo",
    "body": [
      "session_start();",
      "",
      "$$_SESSION = array();",
      "$$params = session_get_cookie_params();",
      "setcookie(session_name(), '', time() - 36000,",
      "\t$$params['path'], $$params['domain'],",
      "\t$$params['secure'], $$params['httponly']);",
      "session_destroy();${1:}"
    ],
    "description": "ログアウト時のセッション破棄"
  },
  "redirect": {
    "prefix": "hl",
    "body": ["header('Location: ${1:}.php');", "exit;"],
    "description": "リダイレクト処理"
  },
  "PDOException": {
    "prefix": "try",
    "body": [
      "try {",
      "\t${1:}",
      "} catch (PDOException $$e) {",
      "\theader('Content-Type: text/plain; charset=UTF-8', true, 500);",
      "\texit($$e->getMessage());",
      "}"
    ],
    "description": "例外処理"
  },
  "DateTimeFormat": {
    "prefix": "dtf",
    "body": "(new DateTime(${1:}))->format('${2:Y-m-d}');",
    "description": "DateTimeの表示整形をワンラインで実行"
  },
  "RouteGet": {
    "prefix": "rget",
    "body": "Route::get('/', [${1:}Controller::class, '${2:index}']);",
    "description": "LaravelのREST APIの基本展開"
  },
  "foreach": {
    "prefix": "@for",
    "body": ["@foreach (${1:$arr} as ${2:$val})", "\t${3:}", "@endforeach"],
    "description": "Laravelbladeの繰り返しディレクティブ"
  }
}
